{"ast":null,"code":"var _jsxFileName = \"/home/imdiku/reactApp-Project/project1/frontend/src/pages/create/SubmissionContent.js\",\n  _s = $RefreshSig$();\nimport '../SimpleForm.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport SuccessMessage from './SuccessMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubmissionContent = ({\n  circle,\n  division,\n  subdivision\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    circle: circle,\n    division: division,\n    subdivision: subdivision,\n    month_of_year: '',\n    year: '',\n    injection: '',\n    unit_billed: '',\n    total_IRCA_collection: '',\n    demand_IRCA: '',\n    no_of_consumers: '',\n    no_of_bill_served: '',\n    total_area: '',\n    subDivisionbilling_efficiency_perMonth: '',\n    subdivision_monthlyPConsumerBilling: '',\n    subDivisionAverageRevenueRealisationMonthly: '',\n    subDivisionCollectionEfficiencyMonthly: '',\n    ATandC_LossesincludingIRCA: ''\n  });\n\n  // const calculateBillingEfficiencymonthly = () => {\n  //   const { unit_billed, injection } = formData;\n\n  //   const billingEfficiencymonthlyValue = (unit_billed / injection) * 100;\n  //   setBillingEfficiency(billingEfficiencymonthlyValue);\n  // };\n\n  const subDivisioncalculateBillingEfficiencymonthly = () => {\n    const {\n      unit_billed,\n      injection\n    } = formData;\n\n    // Check if both unit_billed and injection are provided and are not zero\n    if (unit_billed && injection && unit_billed !== 0 && injection !== 0) {\n      // Perform the calculation and return the result\n      const billingEfficiencymonthly_subDivisionValue = unit_billed / injection * 100;\n      return Number(billingEfficiencymonthly_subDivisionValue.toFixed(2));\n    } else {\n      // Return null if either unit_billed or injection is missing or zero\n      return null;\n    }\n  };\n  const calculateSubdivisionMonthlyPConsumerBilling = () => {\n    const {\n      no_of_bill_served,\n      no_of_consumers\n    } = formData;\n\n    // Check if both no_of_bill_served and no_of_consumers are provided and are not zero\n    if (no_of_bill_served && no_of_consumers && no_of_bill_served !== 0 && no_of_consumers !== 0) {\n      // Perform the calculation and return the result\n      const subdivisionMonthlyPConsumerBillingValue = no_of_bill_served / no_of_consumers * 100;\n      return Number(subdivisionMonthlyPConsumerBillingValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either no_of_bill_served or no_of_consumers is missing or zero\n      return null;\n    }\n  };\n  const calculateSubDivisionAverageRevenueRealisationMonthly = () => {\n    const {\n      total_IRCA_collection,\n      injection\n    } = formData;\n\n    // Check if both total_IRCA_collection and injection are provided and injection is not zero\n    if (total_IRCA_collection && injection && injection !== 0) {\n      // Perform the calculation and return the result\n      const subDivisionAverageRevenueRealisationMonthlyValue = total_IRCA_collection / injection / 10;\n      return Number(subDivisionAverageRevenueRealisationMonthlyValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either total_IRCA_collection or injection is missing or injection is zero\n      return null;\n    }\n  };\n  const calculateSubDivisionCollectionEfficiencyMonthly = () => {\n    const {\n      total_IRCA_collection,\n      demand_IRCA\n    } = formData;\n\n    // Check if both total_IRCA_collection and demand_IRCA are provided and demand_IRCA is not zero\n    if (total_IRCA_collection && demand_IRCA && demand_IRCA !== 0) {\n      // Perform the calculation and return the result\n      const subDivisionCollectionEfficiencyMonthlyValue = total_IRCA_collection / demand_IRCA * 100;\n      return Number(subDivisionCollectionEfficiencyMonthlyValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either total_IRCA_collection or demand_IRCA is missing or demand_IRCA is zero\n      return null;\n    }\n  };\n  const [showMessage, setShowMessage] = useState(false);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n    const billingEfficiencymonthly_subDivision = subDivisioncalculateBillingEfficiencymonthly();\n    const subdivisionMonthlyPConsumerBilling = calculateSubdivisionMonthlyPConsumerBilling();\n    const subDivisionAverageRevenueRealisationMonthly = calculateSubDivisionAverageRevenueRealisationMonthly();\n    const subDivisionCollectionEfficiencyMonthly = calculateSubDivisionCollectionEfficiencyMonthly();\n\n    // Check if all the required values are available before calculating ATandC_LossesincludingIRCA\n    if (billingEfficiencymonthly_subDivision !== null && subDivisionCollectionEfficiencyMonthly !== null) {\n      const ATandCLossesIncludingIRCAValue = (1 - billingEfficiencymonthly_subDivision * (subDivisionCollectionEfficiencyMonthly / 100)) * 100;\n      const positiveATandCLossesIncludingIRCA = Math.abs(ATandCLossesIncludingIRCAValue);\n      const updatedFormData = {\n        ...formData,\n        subDivisionbilling_efficiency_perMonth: billingEfficiencymonthly_subDivision,\n        subdivision_monthlyPConsumerBilling: subdivisionMonthlyPConsumerBilling,\n        subDivisionAverageRevenueRealisationMonthly: subDivisionAverageRevenueRealisationMonthly,\n        subDivisionCollectionEfficiencyMonthly: subDivisionCollectionEfficiencyMonthly,\n        ATandC_LossesincludingIRCA: positiveATandCLossesIncludingIRCA\n      };\n      axios.post('/create', updatedFormData).then(response => {\n        console.log(response.data); // Data saved successfully message from the backend\n        // Optionally, you can handle success here or notify the user\n        setShowMessage(true);\n        // setTimeout(() => {\n        //   navigate('/create'); \n        //   window.location.reload();\n        // }, 500); \n      }).catch(error => {\n        console.error('Error:', error); // Log the error if something went wrong\n        // Optionally, you can handle the error or notify the user\n      });\n    } else {\n      // Show an error or handle the case where billingEfficiencymonthly is null\n      // For example:\n      console.error('Error: Billing efficiency calculation failed.');\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"submission-content-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submission-content\",\n      children: showMessage ? /*#__PURE__*/_jsxDEV(SuccessMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Fill the additional details for monthly report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Circle: \", circle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Division: \", division]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sub-Division: \", subdivision]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"month_of_year\",\n              children: \"Month:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              type: \"text\",\n              id: \"month_of_year\",\n              name: \"month_of_year\",\n              value: formData.month_of_year,\n              onChange: handleInputChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"January\",\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Febuary\",\n                children: \"Febuary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"March\",\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"April\",\n                children: \"April\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"May\",\n                children: \"May\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"June\",\n                children: \"June\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"July\",\n                children: \"July\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"August\",\n                children: \"August\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"September\",\n                children: \"September\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"October\",\n                children: \"October\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"November\",\n                children: \"November\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"December\",\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"year\",\n              children: \"Year:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"year\",\n              name: \"year\",\n              value: formData.year,\n              onChange: handleInputChange,\n              placeholder: \"Enter Year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"injection\",\n              children: \"Injection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"injection\",\n              name: \"injection\",\n              value: formData.injection,\n              onChange: handleInputChange,\n              placeholder: \"Enter Injection value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"unit_billed\",\n              children: \"Unit Billed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"unit_billed\",\n              name: \"unit_billed\",\n              value: formData.unit_billed,\n              onChange: handleInputChange,\n              placeholder: \"Enter Unit Billed value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"total_IRCA_collection\",\n              children: \"Total Collection including IRCA:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"total_IRCA_collection\",\n              name: \"total_IRCA_collection\",\n              value: formData.total_IRCA_collection,\n              onChange: handleInputChange,\n              placeholder: \"Total Collection including IRCA value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"demand_IRCA\",\n              children: \"Current Demand including IRCA:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"demand_IRCA\",\n              name: \"demand_IRCA\",\n              value: formData.demand_IRCA,\n              onChange: handleInputChange,\n              placeholder: \"Enter Current Demand including IRCA value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"no_of_consumers\",\n              children: \"No of Consumers:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"no_of_consumers\",\n              name: \"no_of_consumers\",\n              value: formData.no_of_consumers,\n              onChange: handleInputChange,\n              placeholder: \"Enter No of Consumers in a sub-division\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"no_of_bill_served\",\n              children: \"No of Bill Served:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"no_of_bill_served\",\n              name: \"no_of_bill_served\",\n              value: formData.no_of_bill_served,\n              onChange: handleInputChange,\n              placeholder: \"Enter No of Bill Served in a sub-division\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"total_area\",\n              children: \"Total Area:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"total_area\",\n              name: \"total_area\",\n              value: formData.total_area,\n              onChange: handleInputChange,\n              placeholder: \"Enter Total Area\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmissionContent, \"dIIK21ETR1n3HbsErtDVdpG3WZQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SubmissionContent;\nexport default SubmissionContent;\nvar _c;\n$RefreshReg$(_c, \"SubmissionContent\");","map":{"version":3,"names":["React","useState","axios","useNavigate","SuccessMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","SubmissionContent","circle","division","subdivision","_s","formData","setFormData","month_of_year","year","injection","unit_billed","total_IRCA_collection","demand_IRCA","no_of_consumers","no_of_bill_served","total_area","subDivisionbilling_efficiency_perMonth","subdivision_monthlyPConsumerBilling","subDivisionAverageRevenueRealisationMonthly","subDivisionCollectionEfficiencyMonthly","ATandC_LossesincludingIRCA","subDivisioncalculateBillingEfficiencymonthly","billingEfficiencymonthly_subDivisionValue","Number","toFixed","calculateSubdivisionMonthlyPConsumerBilling","subdivisionMonthlyPConsumerBillingValue","calculateSubDivisionAverageRevenueRealisationMonthly","subDivisionAverageRevenueRealisationMonthlyValue","calculateSubDivisionCollectionEfficiencyMonthly","subDivisionCollectionEfficiencyMonthlyValue","showMessage","setShowMessage","handleInputChange","e","name","value","target","prevData","navigate","handleSubmit","preventDefault","billingEfficiencymonthly_subDivision","subdivisionMonthlyPConsumerBilling","ATandCLossesIncludingIRCAValue","positiveATandCLossesIncludingIRCA","Math","abs","updatedFormData","post","then","response","console","log","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/imdiku/reactApp-Project/project1/frontend/src/pages/create/SubmissionContent.js"],"sourcesContent":["import '../SimpleForm.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport SuccessMessage from './SuccessMessage';\n\n\nconst SubmissionContent = ({ circle, division, subdivision }) => {\n  const [formData, setFormData] = useState({\n    circle: circle,\n    division: division,\n    subdivision: subdivision,\n    month_of_year: '',\n    year: '',\n    injection: '',\n    unit_billed: '',\n    total_IRCA_collection: '',\n    demand_IRCA: '',\n    no_of_consumers: '',\n    no_of_bill_served: '',\n    total_area: '',\n    subDivisionbilling_efficiency_perMonth: '',\n    subdivision_monthlyPConsumerBilling: '',\n    subDivisionAverageRevenueRealisationMonthly: '', \n    subDivisionCollectionEfficiencyMonthly: '',\n    ATandC_LossesincludingIRCA: '',\n\n  });\n\n  // const calculateBillingEfficiencymonthly = () => {\n  //   const { unit_billed, injection } = formData;\n\n  //   const billingEfficiencymonthlyValue = (unit_billed / injection) * 100;\n  //   setBillingEfficiency(billingEfficiencymonthlyValue);\n  // };\n\n\n\n  const subDivisioncalculateBillingEfficiencymonthly = () => {\n    const { unit_billed, injection } = formData;\n  \n    // Check if both unit_billed and injection are provided and are not zero\n    if (unit_billed && injection && unit_billed !== 0 && injection !== 0) {\n      // Perform the calculation and return the result\n      const billingEfficiencymonthly_subDivisionValue = (unit_billed / injection) * 100;\n      return Number(billingEfficiencymonthly_subDivisionValue.toFixed(2)); \n    } else {\n      // Return null if either unit_billed or injection is missing or zero\n      return null;\n    }\n  };\n\n  const calculateSubdivisionMonthlyPConsumerBilling = () => {\n    const { no_of_bill_served, no_of_consumers } = formData;\n\n    // Check if both no_of_bill_served and no_of_consumers are provided and are not zero\n    if (no_of_bill_served && no_of_consumers && no_of_bill_served !== 0 && no_of_consumers !== 0) {\n      // Perform the calculation and return the result\n      const subdivisionMonthlyPConsumerBillingValue = (no_of_bill_served / no_of_consumers) * 100;\n      return Number(subdivisionMonthlyPConsumerBillingValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either no_of_bill_served or no_of_consumers is missing or zero\n      return null;\n    }\n  };\n\n  const calculateSubDivisionAverageRevenueRealisationMonthly = () => {\n    const { total_IRCA_collection, injection } = formData;\n\n    // Check if both total_IRCA_collection and injection are provided and injection is not zero\n    if (total_IRCA_collection && injection && injection !== 0) {\n      // Perform the calculation and return the result\n      const subDivisionAverageRevenueRealisationMonthlyValue = (total_IRCA_collection / injection) / 10;\n      return Number(subDivisionAverageRevenueRealisationMonthlyValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either total_IRCA_collection or injection is missing or injection is zero\n      return null;\n    }\n  };\n\n  const calculateSubDivisionCollectionEfficiencyMonthly = () => {\n    const { total_IRCA_collection, demand_IRCA } = formData;\n\n    // Check if both total_IRCA_collection and demand_IRCA are provided and demand_IRCA is not zero\n    if (total_IRCA_collection && demand_IRCA && demand_IRCA !== 0) {\n      // Perform the calculation and return the result\n      const subDivisionCollectionEfficiencyMonthlyValue = (total_IRCA_collection / demand_IRCA) * 100;\n      return Number(subDivisionCollectionEfficiencyMonthlyValue.toFixed(2)); // Keep only two digits after the decimal point\n    } else {\n      // Return null if either total_IRCA_collection or demand_IRCA is missing or demand_IRCA is zero\n      return null;\n    }\n  };\n\n\n  \n\n  \n  \n  \n  \n  \n  \n\n  \n  \n  const [showMessage, setShowMessage] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const navigate = useNavigate(); \n  const handleSubmit = (e) => {\n    e.preventDefault();\n  \n    const billingEfficiencymonthly_subDivision = subDivisioncalculateBillingEfficiencymonthly();\n    const subdivisionMonthlyPConsumerBilling = calculateSubdivisionMonthlyPConsumerBilling();\n    const subDivisionAverageRevenueRealisationMonthly = calculateSubDivisionAverageRevenueRealisationMonthly();\n    const subDivisionCollectionEfficiencyMonthly = calculateSubDivisionCollectionEfficiencyMonthly();\n\n  \n    // Check if all the required values are available before calculating ATandC_LossesincludingIRCA\n    if (\n      billingEfficiencymonthly_subDivision !== null &&\n      subDivisionCollectionEfficiencyMonthly !== null\n    ) {\n      const ATandCLossesIncludingIRCAValue =\n        (1 - billingEfficiencymonthly_subDivision * (subDivisionCollectionEfficiencyMonthly / 100)) *\n        100;\n        const positiveATandCLossesIncludingIRCA = Math.abs(ATandCLossesIncludingIRCAValue);\n      const updatedFormData = {\n        ...formData,\n        subDivisionbilling_efficiency_perMonth: billingEfficiencymonthly_subDivision,\n        subdivision_monthlyPConsumerBilling: subdivisionMonthlyPConsumerBilling,\n        subDivisionAverageRevenueRealisationMonthly: subDivisionAverageRevenueRealisationMonthly,\n        subDivisionCollectionEfficiencyMonthly: subDivisionCollectionEfficiencyMonthly,\n        ATandC_LossesincludingIRCA: positiveATandCLossesIncludingIRCA,\n      };\n     \n  \n      axios.post('/create', updatedFormData)\n        .then((response) => {\n          console.log(response.data); // Data saved successfully message from the backend\n          // Optionally, you can handle success here or notify the user\n          setShowMessage(true);\n          // setTimeout(() => {\n          //   navigate('/create'); \n          //   window.location.reload();\n          // }, 500); \n        })\n        .catch((error) => {\n          console.error('Error:', error); // Log the error if something went wrong\n          // Optionally, you can handle the error or notify the user\n        });\n    } else {\n      // Show an error or handle the case where billingEfficiencymonthly is null\n      // For example:\n      console.error('Error: Billing efficiency calculation failed.');\n      return;\n    }\n  };\n\n\n  \n\n  return (\n    <div className=\"submission-content-container\">\n      <div className=\"submission-content\">\n      {showMessage ? (\n          <SuccessMessage />\n        ) : (\n        <>\n      <h3>Fill the additional details for monthly report</h3>\n\n      <form onSubmit={handleSubmit}>\n        <p>Circle: {circle}</p>\n        <p>Division: {division}</p>\n        <p>Sub-Division: {subdivision}</p>\n        {/* New form for additional inputs */}\n        \n          {/* 10 input fields */}\n          <div>\n        <label htmlFor=\"month_of_year\">Month:</label>\n        <select\n          type=\"text\"\n          id=\"month_of_year\"\n          name=\"month_of_year\"\n          value={formData.month_of_year}\n          onChange={handleInputChange}\n        >\n          <option value=\"\">Select Month</option>\n            <option value=\"January\">January</option>\n            <option value=\"Febuary\">Febuary</option>\n            <option value=\"March\">March</option>\n            <option value=\"April\">April</option>\n            <option value=\"May\">May</option>\n            <option value=\"June\">June</option>\n            <option value=\"July\">July</option>\n            <option value=\"August\">August</option>\n            <option value=\"September\">September</option>\n            <option value=\"October\">October</option>\n            <option value=\"November\">November</option>\n            <option value=\"December\">December</option>\n          </select>\n      </div>\n          <div>\n          <label htmlFor=\"year\">Year:</label>\n            <input\n              type=\"number\"\n              id=\"year\"\n              name=\"year\"\n              value={formData.year}\n              onChange={handleInputChange}\n              placeholder=\"Enter Year\"\n            />\n            <label htmlFor=\"injection\">Injection:</label>\n            <input\n              type=\"number\"\n              id=\"injection\"\n              name=\"injection\"\n              value={formData.injection}\n              onChange={handleInputChange}\n              placeholder=\"Enter Injection value\"\n            />\n            <label htmlFor=\"unit_billed\">Unit Billed:</label>\n            <input\n              type=\"number\"\n              id=\"unit_billed\"\n              name=\"unit_billed\"\n              value={formData.unit_billed}\n              onChange={handleInputChange}\n              placeholder=\"Enter Unit Billed value\"\n            />\n          </div>\n          {/* ... */}\n          <div>\n            <label htmlFor=\"total_IRCA_collection\">Total Collection including IRCA:</label>\n            <input\n              type=\"number\"\n              id=\"total_IRCA_collection\"\n              name=\"total_IRCA_collection\"\n              value={formData.total_IRCA_collection}\n              onChange={handleInputChange}\n              placeholder=\"Total Collection including IRCA value\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"demand_IRCA\">Current Demand including IRCA:</label>\n            <input\n              type=\"number\"\n              id=\"demand_IRCA\"\n              name=\"demand_IRCA\"\n              value={formData.demand_IRCA}\n              onChange={handleInputChange}\n              placeholder=\"Enter Current Demand including IRCA value\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"no_of_consumers\">No of Consumers:</label>\n            <input\n              type=\"number\"\n              id=\"no_of_consumers\"\n              name=\"no_of_consumers\"\n              value={formData.no_of_consumers}\n              onChange={handleInputChange}\n              placeholder=\"Enter No of Consumers in a sub-division\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"no_of_bill_served\">No of Bill Served:</label>\n            <input\n              type=\"number\"\n              id=\"no_of_bill_served\"\n              name=\"no_of_bill_served\"\n              value={formData.no_of_bill_served}\n              onChange={handleInputChange}\n              placeholder=\"Enter No of Bill Served in a sub-division\"\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"total_area\">Total Area:</label>\n            <input\n              type=\"number\"\n              id=\"total_area\"\n              name=\"total_area\"\n              value={formData.total_area}\n              onChange={handleInputChange}\n              placeholder=\"Enter Total Area\"\n            />\n          </div>\n\n            \n            <button type=\"submit\" onClick={handleSubmit}>\n                                Submit\n                            </button>\n          \n        </form>\n        </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SubmissionContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
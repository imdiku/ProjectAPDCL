{"ast":null,"code":"var _jsxFileName = \"/home/imdiku/reactApp-Project/project1/frontend/src/pages/view/Output.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './view.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = () => {\n  _s();\n  const [circle, setCircle] = useState('');\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n  const handleCircleChange = e => {\n    setCircle(e.target.value);\n  };\n  const handleYearChange = e => {\n    setYear(e.target.value);\n  };\n  const handleMonthChange = e => {\n    setMonth(e.target.value);\n  };\n  const handleGetData = e => {\n    e.preventDefault();\n\n    // Prepare the API endpoint URL based on the selected options\n    let apiUrl = '/view';\n\n    // Build the query parameters based on the selected search options\n    const queryParams = {\n      circle: circle,\n      year: year,\n      month: month\n    };\n\n    // Convert the query parameters to a URL-encoded string\n    const queryString = new URLSearchParams(queryParams).toString();\n\n    // Append the query string to the API endpoint URL\n    apiUrl += `?${queryString}`;\n\n    // Make the API call using axios\n    axios.get(apiUrl).then(response => {\n      // Handle the response data here\n      console.log(response.data); // This will log the data returned from the API\n      // Update the state with the fetched data if necessary\n      setOutputData(response.data);\n    }).catch(error => {\n      console.error('Error:', error); // Log the error if something went wrong\n      // Optionally, you can handle the error or notify the user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"makesure\",\n      children: \"View Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choosing\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bsbc\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dsdc\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Circle:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: circle,\n                  onChange: handleCircleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dsdc\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Month:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: month,\n                  onChange: handleMonthChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dsdc\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Year:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: year,\n                  onChange: handleYearChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"getMore\",\n            onClick: handleGetData,\n            children: \"Get Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"vr4+1kwooA7ZRm6VdQj/8T2buhQ=\");\n_c = Output;\nexport default Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Output","_s","circle","setCircle","year","setYear","month","setMonth","handleCircleChange","e","target","value","handleYearChange","handleMonthChange","handleGetData","preventDefault","apiUrl","queryParams","queryString","URLSearchParams","toString","get","then","response","console","log","data","setOutputData","catch","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/imdiku/reactApp-Project/project1/frontend/src/pages/view/Output.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './view.css';\n\nconst Output = () => {\n  const [circle, setCircle] = useState('');\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n\n\n  const handleCircleChange = (e) => {\n    setCircle(e.target.value);\n  };\n\n  const handleYearChange = (e) => {\n    setYear(e.target.value);\n  };\n\n  const handleMonthChange = (e) => {\n    setMonth(e.target.value);\n  };\n\n\n\n\n  const handleGetData = (e) => {\n    e.preventDefault();\n\n    // Prepare the API endpoint URL based on the selected options\n    let apiUrl = '/view';\n\n    // Build the query parameters based on the selected search options\n    const queryParams = {\n      circle: circle,\n      year: year,\n      month: month,\n    };\n\n    // Convert the query parameters to a URL-encoded string\n    const queryString = new URLSearchParams(queryParams).toString();\n\n    // Append the query string to the API endpoint URL\n    apiUrl += `?${queryString}`;\n\n    // Make the API call using axios\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        // Handle the response data here\n        console.log(response.data); // This will log the data returned from the API\n        // Update the state with the fetched data if necessary\n        setOutputData(response.data);\n      })\n      .catch((error) => {\n        console.error('Error:', error); // Log the error if something went wrong\n        // Optionally, you can handle the error or notify the user\n      });\n  };\n\n  return (\n    <div>\n       <h1 className='makesure'>View Data</h1>\n      <div className=\"choosing\">\n     \n     <div>\n     <form>\n       <div className='bsbc'>\n       <div className='dsdc'>\n        <label>\n          Circle:\n          <input type='text' value={circle} onChange={handleCircleChange} />\n        </label>\n      </div>\n      <div className='dsdc'>\n        <label>\n          Month:\n          <input type='text' value={month} onChange={handleMonthChange} />\n        </label>\n      </div>\n        <div className='dsdc'>\n        <label>\n          Year:\n          <input type='number' value={year} onChange={handleYearChange} />\n        </label>\n      </div>\n       </div>\n        <button type=\"submit\" className='getMore' onClick={handleGetData}>Get Output</button>\n      </form>\n     </div>\n    </div>\n    </div>\n  );\n};\n\nexport default Output;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
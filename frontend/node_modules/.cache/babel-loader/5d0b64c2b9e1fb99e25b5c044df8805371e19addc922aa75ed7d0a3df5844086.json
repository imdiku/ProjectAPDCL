{"ast":null,"code":"var _jsxFileName = \"/home/imdiku/reactApp-Project/project1/frontend/src/pages/view/Output.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './view.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Output = () => {\n  _s();\n  const [viewOption, setViewOption] = useState('monthly');\n  const [dataOption, setDataOption] = useState('circle');\n  const [circle, setCircle] = useState('');\n  const [division, setDivision] = useState('');\n  const [subdivision, setSubdivision] = useState('');\n  const handleViewOptionChange = e => {\n    setViewOption(e.target.value);\n  };\n  const handleDataOptionChange = e => {\n    setDataOption(e.target.value);\n  };\n  const handleCircleChange = e => {\n    setCircle(e.target.value);\n  };\n  const handleDivisionChange = e => {\n    setDivision(e.target.value);\n  };\n  const handleSubdivisionChange = e => {\n    setSubdivision(e.target.value);\n  };\n  const handleGetData = () => {\n    // Prepare the API endpoint URL based on the selected options\n    let apiUrl = '/api/data'; // Replace this with your actual API endpoint URL\n    if (viewOption === 'monthly') {\n      apiUrl += '/monthly';\n    } else {\n      apiUrl += '/yearly';\n    }\n    if (dataOption === 'circle') {\n      apiUrl += `/circle/${circle}`;\n    } else if (dataOption === 'division') {\n      apiUrl += `/division/${circle}/${division}`;\n    } else if (dataOption === 'subdivision') {\n      apiUrl += `/subdivision/${circle}/${division}/${subdivision}`;\n    }\n\n    // Make the API call using axios\n    axios.get(apiUrl).then(response => {\n      // Handle the response data here\n      console.log(response.data); // This will log the data returned from the API\n      // Update the state with the fetched data if necessary\n    }).catch(error => {\n      console.error('Error:', error); // Log the error if something went wrong\n      // Optionally, you can handle the error or notify the user\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"View data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Output, \"nRb6voMpIb0yD9u1VBK8T5sbir0=\");\n_c = Output;\nvar _c;\n$RefreshReg$(_c, \"Output\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Output","_s","viewOption","setViewOption","dataOption","setDataOption","circle","setCircle","division","setDivision","subdivision","setSubdivision","handleViewOptionChange","e","target","value","handleDataOptionChange","handleCircleChange","handleDivisionChange","handleSubdivisionChange","handleGetData","apiUrl","get","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/imdiku/reactApp-Project/project1/frontend/src/pages/view/Output.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './view.css';\n\nconst Output = () => {\n  const [viewOption, setViewOption] = useState('monthly');\n  const [dataOption, setDataOption] = useState('circle');\n  const [circle, setCircle] = useState('');\n  const [division, setDivision] = useState('');\n  const [subdivision, setSubdivision] = useState('');\n\n  const handleViewOptionChange = (e) => {\n    setViewOption(e.target.value);\n  };\n\n  const handleDataOptionChange = (e) => {\n    setDataOption(e.target.value);\n  };\n\n  const handleCircleChange = (e) => {\n    setCircle(e.target.value);\n  };\n\n  const handleDivisionChange = (e) => {\n    setDivision(e.target.value);\n  };\n\n  const handleSubdivisionChange = (e) => {\n    setSubdivision(e.target.value);\n  };\n\n  const handleGetData = () => {\n    // Prepare the API endpoint URL based on the selected options\n    let apiUrl = '/api/data'; // Replace this with your actual API endpoint URL\n    if (viewOption === 'monthly') {\n      apiUrl += '/monthly';\n    } else {\n      apiUrl += '/yearly';\n    }\n  \n    if (dataOption === 'circle') {\n      apiUrl += `/circle/${circle}`;\n    } else if (dataOption === 'division') {\n      apiUrl += `/division/${circle}/${division}`;\n    } else if (dataOption === 'subdivision') {\n      apiUrl += `/subdivision/${circle}/${division}/${subdivision}`;\n    }\n  \n    // Make the API call using axios\n    axios\n      .get(apiUrl)\n      .then((response) => {\n        // Handle the response data here\n        console.log(response.data); // This will log the data returned from the API\n        // Update the state with the fetched data if necessary\n      })\n      .catch((error) => {\n        console.error('Error:', error); // Log the error if something went wrong\n        // Optionally, you can handle the error or notify the user\n      });\n  };\n\n return(\n\n\n    <div>\n        <h1>View data</h1>\n    </div>\n\n );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,SAAS,CAAC;EACvD,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgB,sBAAsB,GAAIC,CAAC,IAAK;IACpCV,aAAa,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,sBAAsB,GAAIH,CAAC,IAAK;IACpCR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,kBAAkB,GAAIJ,CAAC,IAAK;IAChCN,SAAS,CAACM,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMG,oBAAoB,GAAIL,CAAC,IAAK;IAClCJ,WAAW,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMI,uBAAuB,GAAIN,CAAC,IAAK;IACrCF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMK,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,IAAIC,MAAM,GAAG,WAAW,CAAC,CAAC;IAC1B,IAAInB,UAAU,KAAK,SAAS,EAAE;MAC5BmB,MAAM,IAAI,UAAU;IACtB,CAAC,MAAM;MACLA,MAAM,IAAI,SAAS;IACrB;IAEA,IAAIjB,UAAU,KAAK,QAAQ,EAAE;MAC3BiB,MAAM,IAAK,WAAUf,MAAO,EAAC;IAC/B,CAAC,MAAM,IAAIF,UAAU,KAAK,UAAU,EAAE;MACpCiB,MAAM,IAAK,aAAYf,MAAO,IAAGE,QAAS,EAAC;IAC7C,CAAC,MAAM,IAAIJ,UAAU,KAAK,aAAa,EAAE;MACvCiB,MAAM,IAAK,gBAAef,MAAO,IAAGE,QAAS,IAAGE,WAAY,EAAC;IAC/D;;IAEA;IACAb,KAAK,CACFyB,GAAG,CAACD,MAAM,CAAC,CACXE,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBJ,OAAO,CAACI,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC;MAChC;IACF,CAAC,CAAC;EACN,CAAC;;EAEF,oBAGG9B,OAAA;IAAA+B,QAAA,eACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAGV,CAAC;AAACjC,EAAA,CAlEID,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}